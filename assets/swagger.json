{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Golang API.",
    "version": "0.0.1-alpha"
  },
  "host": "localhost",
  "basePath": "/api/v1",
  "paths": {
    "/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "AUTH"
        ],
        "summary": "For login user.",
        "operationId": "doAuthRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "x-go-name": "Email"
                },
                "password": {
                  "type": "string",
                  "x-go-name": "Password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/userGetResponse"
          },
          "500": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/users": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "USERS"
        ],
        "summary": "For create new user.",
        "operationId": "userCreateRequest",
        "parameters": [
          {
            "x-go-name": "User",
            "name": "user",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "first_name",
                "last_name",
                "email",
                "password",
                "roles"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "x-go-name": "Email"
                },
                "first_name": {
                  "type": "string",
                  "x-go-name": "FirstName"
                },
                "last_name": {
                  "type": "string",
                  "x-go-name": "LastName"
                },
                "password": {
                  "type": "string",
                  "x-go-name": "Password"
                },
                "roles": {
                  "type": "string",
                  "x-go-name": "Roles"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/userCreateResponse"
          },
          "500": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/users/user_id": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "USERS"
        ],
        "summary": "For retrieve users.",
        "operationId": "userGetRequest",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "UserID",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/userGetResponse"
          },
          "500": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "description": "User model",
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "first_name": {
          "type": "string",
          "x-go-name": "FirstName"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "last_name": {
          "type": "string",
          "x-go-name": "LastName"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "roles": {
          "type": "string",
          "x-go-name": "Roles"
        },
        "updated_at": {
          "type": "string",
          "x-go-name": "UpdatedAt"
        }
      },
      "x-go-package": "github.com/Improwised/golang-api/models"
    }
  },
  "responses": {
    "createUserResponse": {
      "description": "UserCreateResponseWrapper for create user response",
      "schema": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "genericError": {
      "description": "SwaggerGenericErrorResponse is store swagger generic error response",
      "schema": {
        "type": "object",
        "required": [
          "status",
          "status_code",
          "error"
        ],
        "properties": {
          "error": {
            "type": "string",
            "x-go-name": "Error",
            "example": "Invalid value for x"
          },
          "status": {
            "type": "string",
            "x-go-name": "Status",
            "example": "Error"
          },
          "status_code": {
            "type": "integer",
            "format": "int64",
            "x-go-name": "StatusCode",
            "example": 400
          }
        }
      }
    },
    "genericResponse": {
      "description": "SwaggerGenericSuccessResponse is store swagger generic response",
      "schema": {
        "type": "object",
        "required": [
          "status",
          "status_code",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "x-go-name": "Message",
            "example": "ok"
          },
          "status": {
            "type": "string",
            "x-go-name": "Status",
            "example": "Success"
          },
          "status_code": {
            "type": "integer",
            "format": "int64",
            "x-go-name": "StatusCode",
            "example": 200
          }
        }
      }
    },
    "getUsersResponse": {
      "description": "UserGetResponseWrapper for get user response",
      "schema": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "userCreateResponse": {
      "description": "UserCreateResponseWrapper for Create user response",
      "schema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "x-go-name": "Email"
          },
          "first_name": {
            "type": "string",
            "x-go-name": "FirstName"
          },
          "id": {
            "type": "string",
            "x-go-name": "ID"
          },
          "last_name": {
            "type": "string",
            "x-go-name": "LastName"
          }
        }
      },
      "headers": {
        "user": {}
      }
    },
    "userGetResponse": {
      "description": "UserGetResponseWrapper for get user response",
      "schema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "x-go-name": "Email"
          },
          "first_name": {
            "type": "string",
            "x-go-name": "FirstName"
          },
          "id": {
            "type": "string",
            "x-go-name": "ID"
          },
          "last_name": {
            "type": "string",
            "x-go-name": "LastName"
          }
        }
      },
      "headers": {
        "user": {}
      }
    }
  }
}